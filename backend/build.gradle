plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

group = 'ca.mcgill'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //cucumber dependancies
    testImplementation 'io.cucumber:cucumber-java:6.10.4'
    testImplementation 'io.cucumber:cucumber-junit:6.10.4'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.7.2'
    testImplementation 'io.cucumber:cucumber-spring:6.10.4'

}


tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        exceptionFormat "full"
    }

}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
    systemProperties([
            //Random in method level
            'junit.jupiter.testmethod.order.default': 'org.junit.jupiter.api.MethodOrderer$Random',
            // Random in class level
            'junit.jupiter.testclass.order.default' : 'org.junit.jupiter.api.ClassOrderer$Random',
    ])

    //To print the JUnit logs in console
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    dependsOn test
}


configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    outputs.upToDateWhen { false }
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'com.baeldung.cucumber',
                    '--order', 'random',
                    'src/test/resources']
        }
    }
}





